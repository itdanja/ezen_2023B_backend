기계어 : 컴퓨터가 이해 할 수 있는 언어 / 2진코드 / 0,1
	- 고급언어 : 사람이 이해 할 수있는 언어.
		- C , C++ , 자바 , 파이썬 , JS 등등
	- 저급언어 : 컴퓨터가 이해 할 수 있는 언어.
		- 어셈블리어
	- 실행 과정
		- 사람(문자) ---- JAVA문법 -----> 소스파일( .java ) ---컴파일--> 기계어파일( .class ) ---> 컴퓨터
	- 특징
		1. 모든 운영체제에서 실행 가능	  = JVM
			- 기계어 사용하기 때문에
		2. 객체 지향 프로그래밍
			- 부품 만들고 부품들을 연결해서 더 큰 프로그램 완성 ex) 레고
		3. 메모리 자동 정리 = JVM
			- *Garbage Collection ( GC ) : 사용하지 않는 메모리를 자동으로 초기화/제거
		4. 무료 라이브러리 풍부
			- 미리 만들어진 함수/클래스 들을 제공 함으로써 빠른개발/협업 도움 ex ) 스프링 프레임워크
	- JDK : 자바 개발 도구
		- JAVA문법 과 라이브러리 가지고 있는 파일
		- 버전 : JDK8 , JDK11 , JDK17(강의)
		- 스프링부트3.0 이상부터 JDK17 이상부터 지원 ( 단* 현재 전자정부프레임워크는 JDK1.8 다수 사용중 )
			- JDK17에 JDK8 포함
	- 텍스트 에디터
		- 각 언어별 자동완성 / 개발 도움을 주는 환경/기능
		1. Visual Studio Code ( 프론트엔드 가장 인기 )	: 프론트엔드 수업
		2. IntelliJ IDEA ( 일반기업/프리랜서 가장 인기 )	: 백엔드 수업
			- IntelliJ IDEA Ultimate : 유료버전
			- IntelliJ IDEA Community Edition : 무료 버전
				 IntelliJ IDEA Community Edition 2023.3.2 [ 강의 ]
		3. Eclipse ( 백엔드 가장 인기 )			: 전면 무료
==========================================================================================
IntelliJ IDEA Community Edition 2023.3.2
	1. 실행
	2. New project
		1. name : 프로젝트 이름 ( ezen_2023B_backend )
		2. location : 프로젝트 위치 ( \Desktop\ezen_2023B_backend )\
			- create git repository : 체크X
		3. Language : java
		4. build system : intellij
		5. JDK : corretto-17
			[최초 1번]
			1. Download jdk
			2. version : 17* , amazon , C:\Users\504-t\.jdks\corretto-17.0.9
		[ create ]

[ 필수 세팅 ]
- 1. 테마 선택
	메뉴 -> 셋팅 -> appearance -> 테마 선택.
- 2. 마우스 휠 확대/축소
	메뉴 -> 셋팅 -> ediotr -> general -> mouse control
		-> change font size with ctrl+mouse wheel -> active editors
- 3. 플러그인
	메뉴 -> 셋팅 -> 플러그인
	1. 한글패치
		Korean Language Pack

[ 자바 프로젝트 폴더 구성 ]

1. 프로젝트이름 [ ezen_2023B_backend ]
	- idea : 인텔리제이 설정파일
	- out : 컴파일/실행결과 된 파일 ( 컴퓨터 ) [ .class ]
	- src : 컴파일 실행 전 파일/소스파일 ( 개발자 )   [ .java ]
		2. 폴더/패키지 [ 해당 폴더 오른쪽클릭 -> 새로만들기 -> 패키지
		-day01
			3. 클래스[ 해당 폴더 오른쪽클릭 -> 새로만들기 -> 클래스 ]
			Step1 	[ 첫글자는 대문자!!!!! (*아닐경우 오류발생) ]


	- gitignore : git사용시 무시할 파일 ( commit 제외 )
	- 외부라이브러리[JDK17]
==========================================================================================
p.34
    - 변수 : 하나의 값을 저장할 수 있는 메모리 번지에 붙어진 이름
        - 사용하는 이유 : 하나의 값을 저장 [ 나중에 사용 가능 , 기억 ]
    - 변수 선언
        1. 타입
            - 기본자료형 8가지 존재
                - 사용하는 이유 : 단점(암기) , 장점( 데이터타입가독성 , 실수/오류 , *메모리효율성[빈공간] )
                    - 사탕 1개 선물 --> 사탕 크기 맞게 상자 골라. [ 빈 공간이 최대한 없도록 ]
                    - 숫자 10를 저장 --> 숫자10 크기 맞게 상자 골라.
                    - 데이터 1byte --> byte타입 사용. [ 다른 타입 사용해도 되지만. ]
            - 정수형 타입
                byte , short , int , long
            - 실수형 타입
                float , double
            - 불리언 타입
                boolean
            - 문자 타입 vs 문자열
                char
        2. 이름
            - 첫글자 소문자인 카멜표기법 권장 , 숫자시작x,공백x,특수문자일부만
            - 사용하는 이유 : 메모리 주소값 대신 메모리 위치를 식별하기 위해 문자로 표현
                - ( 컴퓨터는 저장시 메모리 주소값[16진수]=사람이 알기 어려워)
        3. 대입
            =
        4. 초기값
            - 타입 범위내 데이터만 저장 가능.!!! int 이면 int범위내 double이면 double 범위내.

    - 변수 선언 종류
        1. 타입 변수명              [ - 아직 메모리 할당 x -> 호출 불가능 ]
        2. 타입 변수명 = 초기값

==========================================================================================
진수 : 데이터 표현하는 진법 단위 (방법론)
    - 표현 단위 다형성.
    2진수 : 0 또는 1   <---> 이진코드 <---> 기계어
    8진수 : 0 1 2 3 4 5 6 7
    10진수 : 0 1 2 3 4 5 6 7 8 9 <---> 실생활에서 주로 사용
    16진수 : 0 1 2 3 4 5 6 7 8 9 A(10) B(11) C(12) D(13) E(14) F(15)

용량 : 데이터 크기 정보의 단위
    bit/비트 : 0 또는 1         ,   1비트 -> 01010101   -> 8비트( 비트 8칸 뜻 )
    *byte/바이트 : 비트8칸       ,   8비트 -> 1바이트     -> 1024바이트
    kb/킬로바이트 : 1024바이트    ,  1024바이트 -> 1킬로바이트 -> 1024킬로바이트
    mb/메가바이트 : 1024킬로바이트 , 1024킬로바이트 -> 1메가바이트 -> 1024메가바이트
    gb/기가바이트 : 1024메가바이트 , 1024메가바이트 -> 1기가바이트 ->



8가지 기본 자료형/타입
    [정수]
        1. byte     1바이트    -128 ~ 127
        2. short    2바이트    +-3만정도
        3. int      4바이트    +-21억정도 [ * 직접 입력한 값 -> 리터럴 ] - 정수의기본타입.
        4. long     8바이트    +-21억이상 [ * 리터럴 데이터 뒤에 l/L 붙여 long 타입을 알림 ]
            - 정수 리터럴의 기본타입은 int 이므로.
            - 기본자료형으로 표현이 불가능한 범위는 문자열타입(클래스)
    [문자/정수]
        1. char     2바이트    0 ~ 65535 , 유니코드 , ' ' 사용 ,  unsigned사용[부호를 안쓰고 양수만 사용하므로 ]
    [문자열/참조타입]
        1. String   문자길이에따름 , 참조타입/클래스 , " " 사용 , jdk13이상 """ """ 사용
    [실수]
        1. float    4바이트    7자리 유효  [ * 리터럴 데이터 뒤에 f/F 붙여 float 타입을 알림 ]
        2. double   8바이트    15자리 유효 [ * 직접 입력한 값 -> 리터럴 ] - 실수의기본타입
            - 실수 리터럴의 기본타입은 double 이므로.
            - 자바는 IEEE 754 표준 이용한 부동소수점 표현 [ 왜?? 컴퓨터는 소수점 몰라요.. ]
            - +부호  m(가수) X 10(지수)
    [논리]
        1. boolean  1바이트    [ 주의) 인터넷에 1비트 라고 적혀있는것도 있지만. 1바이트 정확하다. ]

    * 자바에서 사용하는 리터럴( 입력한 데이터 그 자체)
        - 정수(int) , 실수(double) , 논리(boolean) , 문자('') , 문자열(" ")

이스케이프/제어 문자 [ JS 동일 ]
    - \ 백슬래시 뜻함.
        " : 문자열 형식을 위한 연산기호/기능 들어감
        ' : 문자 형식을 위한 연산기호/기능 들어감
    - \" : "큰따옴표 문자형식 출력
    - \' : '작은따옴표 문자형식 출력
    - \n : 줄바꿈처리
    - \t : 탭
    - \\ : \백슬래시 문자형식 출력
    - \r : 캐리지 리턴[ 맨 앞으로 커서 이동 ]
        - 엔터기능 : \n\r


















